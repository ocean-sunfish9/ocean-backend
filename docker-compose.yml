services:
  mysql:
    image: mysql:8.0
    container_name: ocean-backend-mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: ocean-backend
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    restart: always

  redis-master:
    image: redis:7.0
    hostname: redis-master
    container_name: redis-master
    ports:
      - "6379:6379"
    volumes:
      - ./db/redis/data:/data
    networks:
      - app-network
    environment:
      TZ: Asia/Seoul
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis-slave-1:
    image: redis:7.0
    hostname: redis-slave-1
    container_name: redis-slave-1
    ports:
      - "6479:6379"
    environment:
      - REDIS_MASTER_HOST=redis-master
      - REDIS_REPLICATION_MODE=slave
    command: [ "redis-server", "--replicaof", "redis-master", "6379" ]
    depends_on:
      - redis-master
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "info", "replication", "|", "grep", "'role:slave'" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-slave-2:
    image: redis:7.0
    hostname: redis-slave-2
    container_name: redis-slave-2
    ports:
      - "6579:6379"
    environment:
      - REDIS_MASTER_HOST=redis-master
      - REDIS_REPLICATION_MODE=slave
    command: [ "redis-server", "--replicaof", "redis-master", "6379" ]
    depends_on:
      - redis-master
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "info", "replication", "|", "grep", "'role:slave'" ]
      interval: 10s
      timeout: 5s
      retries: 5


  sentinel-1:
    image: redis:7.0
    container_name: redis-sentinel-1
    ports:
      - "26379:26379"
    volumes:
      - ./sentinel:/etc/sentinel
    command: >
      redis-sentinel /etc/sentinel/sentinel.conf
    networks:
      - app-network
    depends_on:
      - redis-master
      - redis-slave-1

  sentinel-2:
    image: redis:7.0
    container_name: redis-sentinel-2
    ports:
      - "26380:26379"
    volumes:
      - ./sentinel:/etc/sentinel
    command: >
      redis-sentinel /etc/sentinel/sentinel.conf
    networks:
      - app-network
    depends_on:
      - redis-master
      - redis-slave-1

  sentinel-3:
    image: redis:7.0
    container_name: redis-sentinel-3
    ports:
      - "26381:26379"
    volumes:
      - ./sentinel:/etc/sentinel
    command: >
      redis-sentinel /etc/sentinel/sentinel.conf
    networks:
      - app-network
    depends_on:
      - redis-master
      - redis-slave-1

networks:
  app-network:
    driver: bridge
volumes:
  db-data: